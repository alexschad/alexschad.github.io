{"mappings":"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","sources":["<anon>","js/portfolio.js"],"sourcesContent":["(()=>{\n    let elements;\n    let windowHeight;\n    let navBar;\n    let lastPos;\n    let positionFromTop;\n    const sections = [];\n    //  let offset = navBar.offsetTop;\n    // const navrect = navBar.getBoundingClientRect();\n    const checkVisible = ()=>{\n        // check if an element is in the viewport then remove the hidden class and\n        // add the class set in the cssclass data attribute\n        for(var i = 0; i < elements.length; i++){\n            var element = elements[i];\n            var positionFromTop = elements[i].getBoundingClientRect().top;\n            if (positionFromTop - windowHeight <= 0) {\n                element.classList.add(element.dataset.cssclass);\n                element.classList.remove(\"hidden\");\n            }\n        }\n    };\n    Math.inOutQuintic = function(t, b, c, d) {\n        var ts = (t /= d) * t, tc = ts * t;\n        return b + c * (6 * tc * ts + -15 * ts * ts + 10 * tc);\n    };\n    // requestAnimationFrame for Smart Animating http://goo.gl/sx5sts\n    var requestAnimFrame = function() {\n        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\n            window.setTimeout(callback, 1000 / 60);\n        };\n    }();\n    function scrollTo(element, to, duration) {\n        const start = element.scrollTop;\n        const change = to - start;\n        const increment = 20;\n        let currentTime = 0;\n        duration = typeof duration === \"undefined\" ? 500 : duration;\n        const animateScroll = function() {\n            // increment the time\n            currentTime += increment;\n            // find the value with the quadratic in-out easing function\n            const val = Math.inOutQuintic(currentTime, start, change, duration);\n            element.scrollTop = val;\n            // do the animation unless its over\n            if (currentTime < duration) requestAnimFrame(animateScroll);\n        };\n        animateScroll();\n    }\n    const checkNav = ()=>{\n        // check if the navigation has reached the top then add the fixed class\n        const height = navBar.getBoundingClientRect().height;\n        const pos = document.documentElement.scrollTop;\n        if (pos >= positionFromTop + height && lastPos < pos) navBar.classList.add(\"fixed\");\n        if (pos < positionFromTop && lastPos > pos) navBar.classList.remove(\"fixed\");\n        lastPos = pos;\n    };\n    const checkActiveSection = ()=>{\n        const height = navBar.getBoundingClientRect().height;\n        let activeSection;\n        sections.forEach((s)=>{\n            if (s.getBoundingClientRect().y - height <= 0) activeSection = s;\n        });\n        const activeNav = document.querySelector(`.nav-link[data-target='${activeSection.id}']`);\n        if (!activeNav.classList.contains(\"active\")) {\n            const oldActive = document.querySelector(\".nav-link.active\");\n            oldActive && oldActive.classList.remove(\"active\");\n            activeNav.classList.add(\"active\");\n        }\n    };\n    const onScroll = ()=>{\n        // do this when the window scrolls\n        checkVisible();\n        checkNav();\n        checkActiveSection();\n    };\n    const clickNav = (e)=>{\n        const targetId = e.target.dataset.target;\n        const targetEl = document.getElementById(targetId);\n        scrollTo(document.documentElement, targetEl.offsetTop, 300);\n        navBar.querySelector(\".nav-wrapper\").classList.remove(\"visible\");\n    };\n    const init = ()=>{\n        const downButton = document.getElementById(\"down-button\");\n        navBar = document.querySelector(\"nav\");\n        positionFromTop = navBar.offsetTop;\n        elements = document.querySelectorAll(\".hidden\");\n        windowHeight = window.innerHeight;\n        about = document.getElementById(\"about\");\n        window.addEventListener(\"scroll\", onScroll);\n        downButton.onclick = ()=>{\n            scrollTo(document.documentElement, about.offsetTop, 300);\n        };\n        document.querySelectorAll(\".nav-link\").forEach((n)=>{\n            n.onclick = clickNav;\n        });\n        document.querySelectorAll(\"section\").forEach((s)=>{\n            sections.push(s);\n        });\n        const hamburger = navBar.querySelector(\"a.icon\");\n        hamburger.onclick = ()=>{\n            navBar.querySelector(\".nav-wrapper\").classList.toggle(\"visible\");\n        };\n        checkVisible();\n    };\n    const winLoad = (callback)=>{\n        if (document.readyState === \"complete\") callback();\n        else window.addEventListener(\"load\", callback);\n    };\n    winLoad(init);\n})();\n\n//# sourceMappingURL=portfolio.f457fd10.js.map\n","(() => {\n  let elements;\n  let windowHeight;\n  let navBar;\n  let lastPos;\n  let positionFromTop;\n  const sections = [];\n  \n  //  let offset = navBar.offsetTop;\n  // const navrect = navBar.getBoundingClientRect();\n\n  const checkVisible = () => {\n    // check if an element is in the viewport then remove the hidden class and\n    // add the class set in the cssclass data attribute\n    for (var i = 0; i < elements.length; i++) {\n      var element = elements[i];\n      var positionFromTop = elements[i].getBoundingClientRect().top;\n\n      if (positionFromTop - windowHeight <= 0) {\n        element.classList.add(element.dataset.cssclass);\n        element.classList.remove('hidden');\n      }\n    }\n  }\n\nMath.inOutQuintic = function(t, b, c, d) {\n  var ts = (t/=d)*t,\n  tc = ts*t;\n  return b+c*(6*tc*ts + -15*ts*ts + 10*tc);\n};\n\n// requestAnimationFrame for Smart Animating http://goo.gl/sx5sts\nvar requestAnimFrame = (function(){\n  return  window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function( callback ){ window.setTimeout(callback, 1000 / 60); };\n})();\n\nfunction scrollTo(element, to, duration) {\n  const start = element.scrollTop;\n  const change = to - start;\n  const increment = 20;\n  let currentTime = 0;\n  duration = (typeof(duration) === 'undefined') ? 500 : duration;\n  const animateScroll = function() {\n    // increment the time\n    currentTime += increment;\n    // find the value with the quadratic in-out easing function\n    const val = Math.inOutQuintic(currentTime, start, change, duration);\n    element.scrollTop = val;\n\n    // do the animation unless its over\n    if (currentTime < duration) {\n      requestAnimFrame(animateScroll);\n    }\n  };\n  animateScroll();\n}\n\n\n\n\n  const checkNav = () => {\n    // check if the navigation has reached the top then add the fixed class\n    const height = navBar.getBoundingClientRect().height;\n    const pos = document.documentElement.scrollTop;\n\n    if (pos >= positionFromTop + height && lastPos < pos) {\n      navBar.classList.add('fixed');\n    }\n    if (pos < positionFromTop && lastPos > pos) {\n      navBar.classList.remove('fixed');\n    }\n    lastPos = pos;\n  }\n\n  const checkActiveSection = () => {\n    const height = navBar.getBoundingClientRect().height;\n    let activeSection;\n    sections.forEach(s => {\n      if (s.getBoundingClientRect().y - height <= 0) {\n        activeSection = s;\n      }\n    });\n    const activeNav = document.querySelector(`.nav-link[data-target='${activeSection.id}']`);\n\n    if (!activeNav.classList.contains('active')) {\n      const oldActive = document.querySelector('.nav-link.active');\n      oldActive && oldActive.classList.remove('active');\n      activeNav.classList.add('active');\n    }\n  }\n\n  const onScroll = () => {\n    // do this when the window scrolls\n    checkVisible();\n    checkNav();\n    checkActiveSection();\n  }\n\n  const clickNav = (e) => {\n    const targetId = e.target.dataset.target;\n    const targetEl = document.getElementById(targetId);\n    scrollTo(document.documentElement, targetEl.offsetTop, 300);\n    navBar.querySelector('.nav-wrapper').classList.remove('visible');\n  }\n\n  const init = () => {\n    const downButton = document.getElementById('down-button');\n    navBar = document.querySelector('nav');\n    positionFromTop = navBar.offsetTop;\n    elements = document.querySelectorAll('.hidden');\n    windowHeight = window.innerHeight;\n    about = document.getElementById('about');\n    window.addEventListener('scroll', onScroll);\n    downButton.onclick = () => {\n      scrollTo(document.documentElement, about.offsetTop, 300);\n    };\n    document.querySelectorAll('.nav-link').forEach(n => {\n        n.onclick = clickNav;\n      }\n    );\n    document.querySelectorAll('section').forEach(s => {sections.push(s)});\n\n    const hamburger = navBar.querySelector('a.icon');\n    hamburger.onclick = () => {\n      navBar.querySelector('.nav-wrapper').classList.toggle('visible');\n    };\n    checkVisible();\n  };\n\n  const winLoad = (callback) => {\n    if (document.readyState === 'complete') {\n      callback();\n    } else {\n      window.addEventListener('load', callback);\n    }\n  };\n\n  winLoad(init);\n})();"],"names":["elements","windowHeight","navBar","lastPos","positionFromTop","sections","checkVisible","i","length","element","getBoundingClientRect","top","classList","add","dataset","cssclass","remove","Math","inOutQuintic","t","b","c","d","ts","tc","callback","requestAnimFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","setTimeout","scrollTo","to","duration","start","scrollTop","change","currentTime","animateScroll","val","checkNav","height","pos","document","documentElement","checkActiveSection","activeSection","forEach","s","y","activeNav","querySelector","id","contains","oldActive","onScroll","clickNav","e","targetId","target","targetEl","getElementById","offsetTop","downButton","querySelectorAll","innerHeight","about","addEventListener","onclick","n","push","hamburger","toggle","readyState"],"version":3,"file":"portfolio.f457fd10.js.map"}